import{_ as s,h as n,o as a,ad as p}from"./chunks/framework.eQDZebM0.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"devlogs/mono/index.md","filePath":"devlogs/mono/index.md"}'),e={name:"devlogs/mono/index.md"},l=p(`<h3 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ued-plus</span></span>
<span class="line"><span>├── CONTRIBUTING.md // 搭建教程</span></span>
<span class="line"><span>├── README.md</span></span>
<span class="line"><span>├── changelogs // 更新日志</span></span>
<span class="line"><span>├── commitlint.config.cjs // commitizen 配置文件，git 提交时做限制，不允许随意提交信息</span></span>
<span class="line"><span>├── devlogs // 开发思路记录</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── packages // 组件核心代码</span></span>
<span class="line"><span>│   ├── components // 组件</span></span>
<span class="line"><span>│   │   ├── components.ts // 暴露所有组件文件</span></span>
<span class="line"><span>│   │   ├── index.ts // 全局入口文件</span></span>
<span class="line"><span>│   │   ├── package.json</span></span>
<span class="line"><span>│   │   ├── script // 打包组件需要的文件</span></span>
<span class="line"><span>│   │   │   ├── build // 打包组件流程入口</span></span>
<span class="line"><span>│   │   │   └── utils // 打包组件工具</span></span>
<span class="line"><span>│   │   ├── src // 组件开发文件夹</span></span>
<span class="line"><span>│   │   ├── vite.config.ts // vue 配置文件</span></span>
<span class="line"><span>│   ├── hooks // 组件提取的公共钩子</span></span>
<span class="line"><span>│   ├── theme // 组件公共样式和主题样式</span></span>
<span class="line"><span>│   └── utils // 组件提取的公共工具</span></span>
<span class="line"><span>├── play // 组件调试，一个vue项目</span></span>
<span class="line"><span>├── pnpm-workspace.yaml // 配置工作区文件</span></span>
<span class="line"><span>├── scripts // 初始化时执行的脚本已经打Tag需要生成日志的脚本</span></span>
<span class="line"><span>│   ├── changelog // 日志生成的配置的文件</span></span>
<span class="line"><span>│   │   ├── changelog-option.cjs</span></span>
<span class="line"><span>│   │   └── cz-lerna-changelog.cjs</span></span>
<span class="line"><span>│   └── shell // git flow 初始化和打tag回调的脚本</span></span>
<span class="line"><span>│       ├── filter-flow-hotfix-finish-tag-message.sh</span></span>
<span class="line"><span>│       ├── filter-flow-release-finish-tag-message.sh</span></span>
<span class="line"><span>│       └── init.sh</span></span>
<span class="line"><span>├── site // 组件文档</span></span>
<span class="line"><span>│   ├── deploy.sh // 文档部署脚本</span></span>
<span class="line"><span>│   ├── docs // 文档内容</span></span>
<span class="line"><span>│   │   ├── changelogs // 日志</span></span>
<span class="line"><span>│   │   ├── components // 组件文档</span></span>
<span class="line"><span>│   │   ├── guide // 指南</span></span>
<span class="line"><span>│   │   │   ├── installation // 安装</span></span>
<span class="line"><span>│   │   │   └── quickstart // 快速开始</span></span>
<span class="line"><span>│   │   ├── index.md</span></span>
<span class="line"><span>│   │   └── public</span></span>
<span class="line"><span>│   │       └── favicon.svg</span></span>
<span class="line"><span>│   └── package.json</span></span>
<span class="line"><span>└── tsconfig.json // ts配置文件</span></span></code></pre></div>`,2),i=[l];function c(t,o,d,g,r,h){return a(),n("div",null,i)}const u=s(e,[["render",c]]);export{_ as __pageData,u as default};
